Resolving data files: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 32/32 [00:00<00:00, 65027.97it/s]
Loading dataset shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 46/46 [00:00<00:00, 251.89it/s]
Training samples: 1940063
Validation samples: 5000
Model pad token id: 0
Total params: 960,881,664
/workspace/llm/your_solution.py:273: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer = Trainer(
[34m[1mwandb[0m: [33mWARNING[0m The `run_name` is currently set to the same value as `TrainingArguments.output_dir`. If this was not intended, please specify a different run name by setting the `TrainingArguments.run_name` parameter.
  0%|                                                                                                                                                        | 0/30314 [00:00<?, ?it/s]W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0] Graph break from `Tensor.item()`, consider setting:
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]     torch._dynamo.config.capture_scalar_outputs = True
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0] or:
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0] to include these operations in the captured graph.
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0] Graph break: from user code at:
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]   File "/usr/local/lib/python3.12/dist-packages/transformers/utils/generic.py", line 969, in wrapper
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]     output = func(self, *args, **kwargs)
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]   File "/usr/local/lib/python3.12/dist-packages/transformers/models/qwen3/modeling_qwen3.py", line 730, in forward
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]     outputs: BaseModelOutputWithPast = self.model(
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]   File "/usr/local/lib/python3.12/dist-packages/transformers/utils/generic.py", line 969, in wrapper
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]     output = func(self, *args, **kwargs)
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]   File "/usr/local/lib/python3.12/dist-packages/transformers/models/qwen3/modeling_qwen3.py", line 446, in forward
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]     causal_mask = self._update_causal_mask(
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]   File "/usr/local/lib/python3.12/dist-packages/transformers/models/qwen3/modeling_qwen3.py", line 503, in _update_causal_mask
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]     is_padding_right = attention_mask[:, -1].sum().item() != input_tensor.size()[0]
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]
W1020 19:08:37.881000 5272 torch/_dynamo/variables/tensor.py:780] [0/0]
W1020 19:09:09.877000 5272 torch/_dynamo/convert_frame.py:861] [9/8] torch._dynamo hit config.cache_size_limit (8)
W1020 19:09:09.877000 5272 torch/_dynamo/convert_frame.py:861] [9/8]    function: 'forward' (/usr/local/lib/python3.12/dist-packages/transformers/models/qwen3/modeling_qwen3.py:201)
W1020 19:09:09.877000 5272 torch/_dynamo/convert_frame.py:861] [9/8]    last reason: 9/0: L['self'].layer_idx == 0
W1020 19:09:09.877000 5272 torch/_dynamo/convert_frame.py:861] [9/8] To log all recompilation reasons, use TORCH_LOGS="recompiles".
W1020 19:09:09.877000 5272 torch/_dynamo/convert_frame.py:861] [9/8] To diagnose recompilation issues, see https://pytorch.org/docs/main/torch.compiler_troubleshooting.html.
  1%|â–ˆâ–‰                                                                                                                                         | 409/30314 [12:50<17:56:25,  2.16s/it]Traceback (most recent call last):
{'loss': 8.6553, 'grad_norm': 1.1171875, 'learning_rate': 0.00019800000000000002, 'epoch': 0.0}
  File "/workspace/llm/your_solution.py", line 300, in <module>                                                                                                                        
{'eval_loss': 7.408022880554199, 'eval_runtime': 44.5651, 'eval_samples_per_second': 112.195, 'eval_steps_per_second': 14.024, 'epoch': 0.0}
{'loss': 6.2355, 'grad_norm': 0.8515625, 'learning_rate': 0.000398, 'epoch': 0.01}
{'eval_loss': 6.202359676361084, 'eval_runtime': 43.7158, 'eval_samples_per_second': 114.375, 'eval_steps_per_second': 14.297, 'epoch': 0.01}
{'loss': 5.2596, 'grad_norm': 0.59765625, 'learning_rate': 0.00039998933331716213, 'epoch': 0.01}
{'eval_loss': 5.5296220779418945, 'eval_runtime': 43.8615, 'eval_samples_per_second': 113.995, 'eval_steps_per_second': 14.249, 'epoch': 0.01}
{'loss': 4.7449, 'grad_norm': 0.5703125, 'learning_rate': 0.00039995690236805883, 'epoch': 0.01}
{'eval_loss': 5.184398651123047, 'eval_runtime': 43.8468, 'eval_samples_per_second': 114.033, 'eval_steps_per_second': 14.254, 'epoch': 0.01}
    train_model()
  File "/workspace/llm/your_solution.py", line 281, in train_model
    trainer.train()
  File "/usr/local/lib/python3.12/dist-packages/transformers/trainer.py", line 2240, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/dist-packages/transformers/trainer.py", line 2560, in _inner_training_loop
    and (torch.isnan(tr_loss_step) or torch.isinf(tr_loss_step))
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Exception ignored in atexit callback: <function _start_and_connect_service.<locals>.teardown_atexit at 0x7f411ae754e0>
Traceback (most recent call last):
  File "/usr/local/lib/python3.12/dist-packages/wandb/sdk/lib/service_connection.py", line 94, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/usr/local/lib/python3.12/dist-packages/wandb/sdk/lib/service_connection.py", line 226, in teardown
    self._router.join()
  File "/usr/local/lib/python3.12/dist-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/usr/lib/python3.12/threading.py", line 1147, in join
    self._wait_for_tstate_lock()
  File "/usr/lib/python3.12/threading.py", line 1167, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt:
